extends layout

block content
  h1 Page d'Upload
  form(id='upload-form', action='/photos/upload', method='POST', enctype='multipart/form-data')
    label(for='photo') Sélectionnez une photo :
    input(type='file', name='photo', id='photo', required)
    
    label(for='description') Description :
    input(type='text', name='description', id='description')
    
    label(for='motsCles') Mots-clés (séparés par des virgules) :
    input(type='text', name='motsCles', id='motsCles')
    
    button(type='submit') Télécharger

    // Élément pour afficher l'image après téléchargement
    div#uploaded-image(style='display: none;')
      img(id='uploaded-image-tag', alt='Uploaded Image')
    
  // Inclure Axios depuis un CDN
  script(src='https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js')

  // JavaScript pour gérer l'upload de photos
  script.
    document.querySelector('#upload-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target);

      try {
        const response = await axios.post('/photos/upload', formData, {
          headers: {
            'Content-Type': 'multipart/form-data',
          },
        });

        if (response.data.message) {
          // Afficher un message de succès dans une boîte de dialogue modale
          alert(response.data.message);
        }

        // Mettre à jour l'interface utilisateur avec l'image uploadée
        if (response.data.cheminFichier) {
          const uploadedImage = document.querySelector('#uploaded-image-tag');
          uploadedImage.src = response.data.cheminFichier;
          document.querySelector('#uploaded-image').style.display = 'block';
        }

        // Réinitialise le formulaire
        e.target.reset();
      } catch (error) {
        // Gérer les erreurs
        console.error('Erreur lors de l\'upload de la photo :', error);
      }
    })
