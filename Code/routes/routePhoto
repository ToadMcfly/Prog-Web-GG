const express = require('express');
const router = express.Router();
const multer = require('multer');
const photoController = require('../app/controllers/photoController');
const Photo = require('../app/models/photo');

// Configuration de Multer pour l'upload de photos
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, 'public/uploads');
  },
  filename: function (req, file, cb) {
    cb(null, Date.now() + '-' + file.originalname);
  },
});
const upload = multer({ storage });

// Route GET pour afficher le formulaire d'upload de photos
router.get('/upload', (req, res) => {
  res.render('upload');
});

// Route POST pour l'upload de photos
router.post('/upload', upload.single('photo'), photoController.uploadPhoto);

// Route GET pour afficher une photo individuelle
router.get('/:photoId', async (req, res) => {
  try {
    const { photoId } = req.params;
    const photo = await Photo.findById(photoId);

    if (!photo) {
      return res.status(404).json({ message: 'Photo non trouvée.' });
    }

    const nomDuFichier = photo.cheminFichier;

    res.render('detail', { photo });
  } catch (error) {
    console.error('Erreur lors de la récupération de la photo :', error);
    return res.status(500).json({ message: 'Erreur lors de la récupération de la photo.' });
  }
});

// Route PUT pour la mise à jour des informations d'une photo
router.put('/:photoId', photoController.updatePhoto);

// Route DELETE pour la suppression d'une photo
router.delete('/:photoId', photoController.deletePhoto);

// Route GET pour la recherche de photos par mots-clés
router.get('/search', photoController.searchPhotos);

// Route GET pour afficher la galerie de photos
router.get('/', photoController.getGallery);

module.exports = router;